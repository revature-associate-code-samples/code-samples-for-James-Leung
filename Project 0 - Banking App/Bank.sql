
CREATE TABLE BK_USERS (

 USER_ID NUMBER(10) PRIMARY KEY,
 FIRSTNAME VARCHAR(36) NOT NULL,
 LASTNAME VARCHAR(36) NOT NULL,
 USERNAME VARCHAR(36) UNIQUE NOT NULL,
 USER_PASSWORD VARCHAR(36) NOT NULL

);

CREATE TABLE BK_ACCOUNTS (
 
 ACC_ID NUMBER(10) PRIMARY KEY,
 ACC_TYPE_ID NUMBER(10) NOT NULL,
 ACC_OWNER NUMBER(10) NOT NULL,
 ACC_BALANCE NUMBER(10) NOT NULL,
 
 FOREIGN KEY (ACC_TYPE_ID) REFERENCES BK_ACCOUNT_TYPES(TYPE_ID),
 FOREIGN KEY (ACC_OWNER) REFERENCES BK_USERS(USER_ID)
 
);
 
CREATE TABLE BK_ACCOUNT_TYPES (
 
 TYPE_ID NUMBER(10) PRIMARY KEY,
 ACC_TYPE VARCHAR(24) NOT NULL
 
);
 
CREATE SEQUENCE BK_USER_SEQ;
 
CREATE SEQUENCE BK_ACCOUNTS_SEQ;
 
CREATE SEQUENCE BK_ACCOUNT_TYPES_SEQ;

CREATE OR REPLACE PROCEDURE GET_ALL_BK_USER
(USER_CURSOR OUT SYS_REFCURSOR)
AS
BEGIN
OPEN
    USER_CURSOR FOR SELECT * FROM BK_USERS;
END;
/

CREATE OR REPLACE PROCEDURE GET_ALL_BK_ACCOUNT
(ACCOUNT_CURSOR OUT SYS_REFCURSOR)
AS
BEGIN
OPEN
    ACCOUNT_CURSOR FOR SELECT * FROM BK_ACCOUNTS;
END;
/

CREATE OR REPLACE PROCEDURE GET_ALL_BK_ACC_TYPE
(ACC_TYPE_CURSOR OUT SYS_REFCURSOR)
AS
BEGIN
OPEN
    ACC_TYPE_CURSOR FOR SELECT * FROM BK_ACCOUNT_TYPES;
END;
/

CREATE OR REPLACE TRIGGER BK_USER_TRIG
BEFORE INSERT ON BK_USERS
FOR EACH ROW 
BEGIN
    SELECT BK_USER_SEQ.NEXTVAL INTO: NEW.USER_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER BK_ACCOUNTS_TRIG
BEFORE INSERT ON BK_ACCOUNTS
FOR EACH ROW 
BEGIN
    SELECT BK_ACCOUNTS_SEQ.NEXTVAL INTO: NEW.ACC_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER BK_ACCOUNT_TYPE_TRIG
BEFORE INSERT ON BK_ACCOUNT_TYPES
FOR EACH ROW 
BEGIN
    SELECT BK_ACCOUNT_TYPES_SEQ.NEXTVAL INTO: NEW.TYPE_ID FROM DUAL;
END;
/

SELECT * FROM BK_USERS;
SELECT * FROM BK_ACCOUNTS;
SELECT * FROM BK_ACCOUNT_TYPES;

INSERT INTO BK_ACCOUNT_TYPES (TYPE_ID, ACC_TYPE) VALUES(1, 'CREDIT');
INSERT INTO BK_ACCOUNT_TYPES (TYPE_ID, ACC_TYPE) VALUES(2, 'CHECKING');
INSERT INTO BK_ACCOUNT_TYPES (TYPE_ID, ACC_TYPE) VALUES(3, 'SAVING');

COMMIT;